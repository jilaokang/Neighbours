<template lang="wxml" minapp="native">
  <view>
    <view class="container">
      <view class="row center_middle login-input">
        <view class="col-3">区</view>
        <view class="col-7">
          <picker @change="getDistrict" range-key="ssq" range="{{districtList}}">
            <view class="picker">
              {{districtValue.ssq}}
            </view>
          </picker>
        </view>
      </view>
      <view class="row center_middle login-input">
        <view class="col-3">街道</view>
        <view class="col-7">
          <picker @change="getStreet" range-key="ssj" range="{{streetList}}">
            <view class="picker">
              {{buffer?buffer:streetValue.ssj}}
            </view>
          </picker>
        </view>
      </view>
      <view class="row center_middle login-input">
        <view class="col-3">社区</view>
        <view class="col-7">
          <picker @change="getCommunity" range-key="sssq" range="{{communityList}}">
            <view class="picker">
              {{buffer2?buffer2:communityValue.sssq}}
            </view>
          </picker>
        </view>
      </view>
    </view>
    <NULL></NULL>
    <view class="container">
      <repeat for="{{gridAdminList}}" key="index">
      <navigator url="/pages/login/peopleInfo?qbm={{districtValue.qbm}}&jbm={{streetValue.jbm}}&sqbm={{communityValue.sqbm}}&wgbm={{item.wgbm}}"
        hover-class="navigator-hover">
        <view class="row gridListCard center_middle">
          <view class="col-2">
            <view class="center_middle">
              <image lazy-load src="{{item.avatar}}"></image>
            </view>
          </view>
          <view class="col-7 content">
            <view class="community">{{item.wgqc}}</view>
            <view class="location">{{item.name}}：{{item.mobile}}</view>
            <view class="admin">管辖区域：{{item.territory}}</view>
          </view>
          <view class="col-1 iconfont icon-ai226"></view>
        </view>
      </navigator>
      </repeat>
    </view>
    <view wx:if="{{loginButton}}" class="model row">
      <button open-type=getUserInfo   @tap="getUserInfo">点我授权</button>
    </view>
    <footerNav bottom="false"></footerNav>
  </view>
</template>
<script>
import wepy from 'wepy';
import NULL from '../../coomponent/null';
import Auth from '../../service/auth';
import Resource from '../../service/resource';
import FooterNav from '../../coomponent/footer';
const auth = new Auth();
const resource = new Resource();

export default class Login extends wepy.page {
  components = {
    NULL: NULL,
    footerNav: FooterNav
  };

  data = {
    loginButton: true,
    buffer: null,
    buffer2: null,
    districtList: [],
    districtValue: {
      ssq: '请选择区'
    },
    streetList: [],
    streetValue: {
      ssj: '请选择街道'
    },
    communityList: [],
    communityValue: {
      sssq: '请选择社区'
    },
    gridList: [],
    gridValue: {},
    gridAdminList: [],
    gridAdminValue: {}
  };

  methods = {
    async getDistrict(e) {
      let that = this;

      that.districtValue = that.districtList[e.detail.value];
      that.buffer = '读取中';
      await resource.getStreetList(that.districtValue.qbm).then(res => {
        that.streetList = res.data.data.jie;
      });
      that.buffer = null;
      that.$apply();
    },

    async getStreet(e) {
      let that = this;
      that.streetValue = that.streetList[e.detail.value];
      that.buffer2 = '读取中';
      await resource.getCommunityList(that.streetValue.jbm).then(res => {
        that.communityList = res.data.data.shequ;
      });
      that.buffer2 = null;
      that.$apply();
    },

    async getCommunity(e) {
      let that = this;
      that.$apply();
      that.communityValue = that.communityList[e.detail.value];
      console.log(that.communityValue.sqbm);
      await resource.getGridList(that.communityValue.sqbm).then(res => {
        that.gridList = res.data.data.wangge;
      });
      await resource.getGridAdminList(that.communityValue.sqbm).then(res => {
        that.gridAdminList = res.data.data.wanggeyuan;
        that.$apply();
      });

      console.log(that.gridList);
      console.log(that.gridAdminList);
      that.$apply();
    },
    getUserInfo() {
      auth.checkLogin();
      this.loginButton = false;
      this.$apply();
    }
  };

  async onLoad() {
    let that = this;
    await resource
      .getDistrictList()
      .then(res => (that.districtList = res.data.data.qu));
    this.$apply();
  }

  async onShow() {
    let that = this;
    await wepy
      .getStorage({
        key: 'openid'
      })
      .then(res => {
        console.log(res);
        that.loginButton = Boolean(res.data.openid) ? false : true;
      });
  }
}
</script>
<style lang="scss" scoped>
.model {
  position: absolute;
  top: 0;
  padding-top: 20vh;
  height: 100vh;
  width: 100vw;
  background: #ffffff;
  button {
    border-radius: 50%;
    text-align: center;
    line-height: 100px;
    background: #1aad19;
    color: #ffffff;
    height: 100px;
  }
}
.login-input {
  height: 50px;
  line-height: 1.55;
  border-bottom: 1px solid #efefef;
}

.gridListCard {
  padding: 10px 0;
  border-bottom: 1px solid #efefef;
  image {
    width: 50px;
    height: 50px;
    border-radius: 50%;
  }
  .content {
    .community {
      font-size: 18px;
      font-weight: 800;
      letter-spacing: 1px;
    }
    .admin,
    .location {
      font-size: 14px;
      color: #aaaaaa;
    }
  }
  .iconfont {
    font-size: 30px;
    color: #dddddd;
  }
}
</style>
